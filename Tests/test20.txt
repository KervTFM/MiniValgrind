#begin

// Sieve of Eratosthenes

int main() {
    int n = 20;
    arr prime[21];
    for (int i = 0; i <= n; i++;) {
        prime[i] = 1;
    }
    prime[0] = 0;
    prime[1] = 0;
    for (int i = 2; i <= n; i++;) {
        if (prime[i] == 1) {
            if (i * i <= n) {
                for (int j = i * i; j <= n; j = j + i;) {
                    prime[j] = 0;
                }
            }
        }
    }

    int count = 0;
    for (int i = 0; i <= n; i++;) {
        if (prime[i] == 1) {
            count++;
        }
    }
    ptr primeList = malloc(count);
    int j = 0;
    for (int i = 0; i <= n; i++;) {
        if (prime[i] == 1) {
            primeList[j++] = i;
        }
    }
    print(primeList);
    free(primeList);
}
// answer: 0, arrVal = [2, 3, 5, 7, 11, 13, 17, 19]
#end