State 53 conflicts: 2 shift/reduce
State 54 conflicts: 2 shift/reduce
State 63 conflicts: 2 shift/reduce
State 64 conflicts: 2 shift/reduce
State 65 conflicts: 2 shift/reduce
State 66 conflicts: 2 shift/reduce
State 119 conflicts: 3 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: P_BEGIN GLOBALS FUNCS P_END
    2        | P_BEGIN FUNCS P_END

    3 GLOBALS: GLOBAL BLOCK

    4 FUNCS: FUNC
    5      | FUNCS FUNC

    6 FUNC: INT IDENTIFIER '(' PARAMS ')' BLOCK
    7     | PTR IDENTIFIER '(' PARAMS ')' BLOCK
    8     | ARR IDENTIFIER '(' PARAMS ')' BLOCK

    9 PARAM: INT IDENTIFIER
   10      | PTR IDENTIFIER
   11      | ARR IDENTIFIER

   12 PARAMS: /* empty */
   13       | PARAM
   14       | PARAMS ',' PARAM

   15 BLOCK: '{' STATS '}'
   16      | '{' '}'

   17 STATS: STAT
   18      | STATS STAT

   19 STAT: STAT1
   20     | IF '(' EXPR ')' BLOCK ELSE BLOCK
   21     | IF '(' EXPR ')' BLOCK
   22     | WHILE '(' EXPR ')' BLOCK
   23     | FOR '(' STAT1 EXPR ';' STAT1 ')' BLOCK
   24     | RETURN EXPR ';'

   25 STAT1: INT IDENTIFIER ';'
   26      | INT IDENTIFIER '=' EXPR ';'
   27      | PTR IDENTIFIER ';'
   28      | PTR IDENTIFIER '=' EXPR ';'
   29      | ARR IDENTIFIER '[' NUM ']' ';'
   30      | IDENTIFIER '=' EXPR ';'
   31      | '*' IDENTIFIER '=' EXPR ';'
   32      | IDENTIFIER '[' EXPR2 ']' '=' EXPR2 ';'
   33      | EXPR ';'

   34 EXPR: EXPR2
   35     | EXPR EQ EXPR2
   36     | EXPR LE EXPR2
   37     | EXPR GE EXPR2
   38     | EXPR NE EXPR2
   39     | EXPR '>' EXPR2
   40     | EXPR '<' EXPR2
   41     | EXPR AND EXPR2
   42     | EXPR OR EXPR2

   43 EXPR2: TERM
   44      | EXPR2 '+' TERM
   45      | EXPR2 '-' TERM
   46      | EXPR2 '%' EXPR2

   47 TERM: VAL
   48     | TERM '*' VAL
   49     | TERM '/' VAL

   50 VAL: NUM
   51    | '-' VAL
   52    | '!' VAL
   53    | VAL INC
   54    | VAL DEC
   55    | INC VAL
   56    | DEC VAL
   57    | '(' EXPR ')'
   58    | IDENTIFIER
   59    | IDENTIFIER '(' ARGS ')'
   60    | '&' VAL
   61    | '*' VAL
   62    | IDENTIFIER '[' EXPR2 ']'

   63 ARGS: /* empty */
   64     | ARG
   65     | ARGS ',' ARG

   66 ARG: EXPR


Terminals, with rules where they appear

$end (0) 0
'!' (33) 52
'%' (37) 46
'&' (38) 60
'(' (40) 6 7 8 20 21 22 23 57 59
')' (41) 6 7 8 20 21 22 23 57 59
'*' (42) 31 48 61
'+' (43) 44
',' (44) 14 65
'-' (45) 45 51
'/' (47) 49
';' (59) 23 24 25 26 27 28 29 30 31 32 33
'<' (60) 40
'=' (61) 26 28 30 31 32
'>' (62) 39
'[' (91) 29 32 62
']' (93) 29 32 62
'{' (123) 15 16
'}' (125) 15 16
error (256)
IF (258) 20 21
ELSE (259) 20
WHILE (260) 22
FOR (261) 23
RETURN (262) 24
P_BEGIN (263) 1 2
P_END (264) 1 2
EQ (265) 35
LE (266) 36
GE (267) 37
NE (268) 38
AND (269) 41
OR (270) 42
INC (271) 53 55
DEC (272) 54 56
NUM (273) 29 50
IDENTIFIER (274) 6 7 8 9 10 11 25 26 27 28 29 30 31 32 58 59 62
GLOBAL (275) 3
INT (276) 6 9 25 26
PTR (277) 7 10 27 28
ARR (278) 8 11 29


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
PROGRAM (43)
    on left: 1 2, on right: 0
GLOBALS (44)
    on left: 3, on right: 1
FUNCS (45)
    on left: 4 5, on right: 1 2 5
FUNC (46)
    on left: 6 7 8, on right: 4 5
PARAM (47)
    on left: 9 10 11, on right: 13 14
PARAMS (48)
    on left: 12 13 14, on right: 6 7 8 14
BLOCK (49)
    on left: 15 16, on right: 3 6 7 8 20 21 22 23
STATS (50)
    on left: 17 18, on right: 15 18
STAT (51)
    on left: 19 20 21 22 23 24, on right: 17 18
STAT1 (52)
    on left: 25 26 27 28 29 30 31 32 33, on right: 19 23
EXPR (53)
    on left: 34 35 36 37 38 39 40 41 42, on right: 20 21 22 23 24 26
    28 30 31 33 35 36 37 38 39 40 41 42 57 66
EXPR2 (54)
    on left: 43 44 45 46, on right: 32 34 35 36 37 38 39 40 41 42 44
    45 46 62
TERM (55)
    on left: 47 48 49, on right: 43 44 45 48 49
VAL (56)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62,
    on right: 47 48 49 51 52 53 54 55 56 60 61
ARGS (57)
    on left: 63 64 65, on right: 59 65
ARG (58)
    on left: 66, on right: 64 65


state 0

    0 $accept: . PROGRAM $end

    P_BEGIN  shift, and go to state 1

    PROGRAM  go to state 2


state 1

    1 PROGRAM: P_BEGIN . GLOBALS FUNCS P_END
    2        | P_BEGIN . FUNCS P_END

    GLOBAL  shift, and go to state 3
    INT     shift, and go to state 4
    PTR     shift, and go to state 5
    ARR     shift, and go to state 6

    GLOBALS  go to state 7
    FUNCS    go to state 8
    FUNC     go to state 9


state 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 10


state 3

    3 GLOBALS: GLOBAL . BLOCK

    '{'  shift, and go to state 11

    BLOCK  go to state 12


state 4

    6 FUNC: INT . IDENTIFIER '(' PARAMS ')' BLOCK

    IDENTIFIER  shift, and go to state 13


state 5

    7 FUNC: PTR . IDENTIFIER '(' PARAMS ')' BLOCK

    IDENTIFIER  shift, and go to state 14


state 6

    8 FUNC: ARR . IDENTIFIER '(' PARAMS ')' BLOCK

    IDENTIFIER  shift, and go to state 15


state 7

    1 PROGRAM: P_BEGIN GLOBALS . FUNCS P_END

    INT  shift, and go to state 4
    PTR  shift, and go to state 5
    ARR  shift, and go to state 6

    FUNCS  go to state 16
    FUNC   go to state 9


state 8

    2 PROGRAM: P_BEGIN FUNCS . P_END
    5 FUNCS: FUNCS . FUNC

    P_END  shift, and go to state 17
    INT    shift, and go to state 4
    PTR    shift, and go to state 5
    ARR    shift, and go to state 6

    FUNC  go to state 18


state 9

    4 FUNCS: FUNC .

    $default  reduce using rule 4 (FUNCS)


state 10

    0 $accept: PROGRAM $end .

    $default  accept


state 11

   15 BLOCK: '{' . STATS '}'
   16      | '{' . '}'

    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    FOR         shift, and go to state 21
    RETURN      shift, and go to state 22
    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    INT         shift, and go to state 27
    PTR         shift, and go to state 28
    ARR         shift, and go to state 29
    '('         shift, and go to state 30
    '}'         shift, and go to state 31
    '*'         shift, and go to state 32
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    STATS  go to state 36
    STAT   go to state 37
    STAT1  go to state 38
    EXPR   go to state 39
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 12

    3 GLOBALS: GLOBAL BLOCK .

    $default  reduce using rule 3 (GLOBALS)


state 13

    6 FUNC: INT IDENTIFIER . '(' PARAMS ')' BLOCK

    '('  shift, and go to state 43


state 14

    7 FUNC: PTR IDENTIFIER . '(' PARAMS ')' BLOCK

    '('  shift, and go to state 44


state 15

    8 FUNC: ARR IDENTIFIER . '(' PARAMS ')' BLOCK

    '('  shift, and go to state 45


state 16

    1 PROGRAM: P_BEGIN GLOBALS FUNCS . P_END
    5 FUNCS: FUNCS . FUNC

    P_END  shift, and go to state 46
    INT    shift, and go to state 4
    PTR    shift, and go to state 5
    ARR    shift, and go to state 6

    FUNC  go to state 18


state 17

    2 PROGRAM: P_BEGIN FUNCS P_END .

    $default  reduce using rule 2 (PROGRAM)


state 18

    5 FUNCS: FUNCS FUNC .

    $default  reduce using rule 5 (FUNCS)


state 19

   20 STAT: IF . '(' EXPR ')' BLOCK ELSE BLOCK
   21     | IF . '(' EXPR ')' BLOCK

    '('  shift, and go to state 47


state 20

   22 STAT: WHILE . '(' EXPR ')' BLOCK

    '('  shift, and go to state 48


state 21

   23 STAT: FOR . '(' STAT1 EXPR ';' STAT1 ')' BLOCK

    '('  shift, and go to state 49


state 22

   24 STAT: RETURN . EXPR ';'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 52
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 23

   55 VAL: INC . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 53


state 24

   56 VAL: DEC . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 54


state 25

   50 VAL: NUM .

    $default  reduce using rule 50 (VAL)


state 26

   30 STAT1: IDENTIFIER . '=' EXPR ';'
   32      | IDENTIFIER . '[' EXPR2 ']' '=' EXPR2 ';'
   58 VAL: IDENTIFIER .
   59    | IDENTIFIER . '(' ARGS ')'
   62    | IDENTIFIER . '[' EXPR2 ']'

    '('  shift, and go to state 55
    '='  shift, and go to state 56
    '['  shift, and go to state 57

    $default  reduce using rule 58 (VAL)


state 27

   25 STAT1: INT . IDENTIFIER ';'
   26      | INT . IDENTIFIER '=' EXPR ';'

    IDENTIFIER  shift, and go to state 58


state 28

   27 STAT1: PTR . IDENTIFIER ';'
   28      | PTR . IDENTIFIER '=' EXPR ';'

    IDENTIFIER  shift, and go to state 59


state 29

   29 STAT1: ARR . IDENTIFIER '[' NUM ']' ';'

    IDENTIFIER  shift, and go to state 60


state 30

   57 VAL: '(' . EXPR ')'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 61
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 31

   16 BLOCK: '{' '}' .

    $default  reduce using rule 16 (BLOCK)


state 32

   31 STAT1: '*' . IDENTIFIER '=' EXPR ';'
   61 VAL: '*' . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 62
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 63


state 33

   51 VAL: '-' . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 64


state 34

   52 VAL: '!' . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 65


state 35

   60 VAL: '&' . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 66


state 36

   15 BLOCK: '{' STATS . '}'
   18 STATS: STATS . STAT

    IF          shift, and go to state 19
    WHILE       shift, and go to state 20
    FOR         shift, and go to state 21
    RETURN      shift, and go to state 22
    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    INT         shift, and go to state 27
    PTR         shift, and go to state 28
    ARR         shift, and go to state 29
    '('         shift, and go to state 30
    '}'         shift, and go to state 67
    '*'         shift, and go to state 32
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    STAT   go to state 68
    STAT1  go to state 38
    EXPR   go to state 39
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 37

   17 STATS: STAT .

    $default  reduce using rule 17 (STATS)


state 38

   19 STAT: STAT1 .

    $default  reduce using rule 19 (STAT)


state 39

   33 STAT1: EXPR . ';'
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ';'  shift, and go to state 75
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 40

   34 EXPR: EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 34 (EXPR)


state 41

   43 EXPR2: TERM .
   48 TERM: TERM . '*' VAL
   49     | TERM . '/' VAL

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82

    $default  reduce using rule 43 (EXPR2)


state 42

   47 TERM: VAL .
   53 VAL: VAL . INC
   54    | VAL . DEC

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    $default  reduce using rule 47 (TERM)


state 43

    6 FUNC: INT IDENTIFIER '(' . PARAMS ')' BLOCK

    INT  shift, and go to state 85
    PTR  shift, and go to state 86
    ARR  shift, and go to state 87

    $default  reduce using rule 12 (PARAMS)

    PARAM   go to state 88
    PARAMS  go to state 89


state 44

    7 FUNC: PTR IDENTIFIER '(' . PARAMS ')' BLOCK

    INT  shift, and go to state 85
    PTR  shift, and go to state 86
    ARR  shift, and go to state 87

    $default  reduce using rule 12 (PARAMS)

    PARAM   go to state 88
    PARAMS  go to state 90


state 45

    8 FUNC: ARR IDENTIFIER '(' . PARAMS ')' BLOCK

    INT  shift, and go to state 85
    PTR  shift, and go to state 86
    ARR  shift, and go to state 87

    $default  reduce using rule 12 (PARAMS)

    PARAM   go to state 88
    PARAMS  go to state 91


state 46

    1 PROGRAM: P_BEGIN GLOBALS FUNCS P_END .

    $default  reduce using rule 1 (PROGRAM)


state 47

   20 STAT: IF '(' . EXPR ')' BLOCK ELSE BLOCK
   21     | IF '(' . EXPR ')' BLOCK

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 92
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 48

   22 STAT: WHILE '(' . EXPR ')' BLOCK

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 93
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 49

   23 STAT: FOR '(' . STAT1 EXPR ';' STAT1 ')' BLOCK

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    INT         shift, and go to state 27
    PTR         shift, and go to state 28
    ARR         shift, and go to state 29
    '('         shift, and go to state 30
    '*'         shift, and go to state 32
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    STAT1  go to state 94
    EXPR   go to state 39
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 50

   58 VAL: IDENTIFIER .
   59    | IDENTIFIER . '(' ARGS ')'
   62    | IDENTIFIER . '[' EXPR2 ']'

    '('  shift, and go to state 55
    '['  shift, and go to state 95

    $default  reduce using rule 58 (VAL)


state 51

   61 VAL: '*' . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 63


state 52

   24 STAT: RETURN EXPR . ';'
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ';'  shift, and go to state 96
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 53

   53 VAL: VAL . INC
   54    | VAL . DEC
   55    | INC VAL .

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    INC       [reduce using rule 55 (VAL)]
    DEC       [reduce using rule 55 (VAL)]
    $default  reduce using rule 55 (VAL)


state 54

   53 VAL: VAL . INC
   54    | VAL . DEC
   56    | DEC VAL .

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    INC       [reduce using rule 56 (VAL)]
    DEC       [reduce using rule 56 (VAL)]
    $default  reduce using rule 56 (VAL)


state 55

   59 VAL: IDENTIFIER '(' . ARGS ')'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    $default  reduce using rule 63 (ARGS)

    EXPR   go to state 97
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42
    ARGS   go to state 98
    ARG    go to state 99


state 56

   30 STAT1: IDENTIFIER '=' . EXPR ';'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 100
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 57

   32 STAT1: IDENTIFIER '[' . EXPR2 ']' '=' EXPR2 ';'
   62 VAL: IDENTIFIER '[' . EXPR2 ']'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 101
    TERM   go to state 41
    VAL    go to state 42


state 58

   25 STAT1: INT IDENTIFIER . ';'
   26      | INT IDENTIFIER . '=' EXPR ';'

    ';'  shift, and go to state 102
    '='  shift, and go to state 103


state 59

   27 STAT1: PTR IDENTIFIER . ';'
   28      | PTR IDENTIFIER . '=' EXPR ';'

    ';'  shift, and go to state 104
    '='  shift, and go to state 105


state 60

   29 STAT1: ARR IDENTIFIER . '[' NUM ']' ';'

    '['  shift, and go to state 106


state 61

   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2
   57 VAL: '(' EXPR . ')'

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 107
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 62

   31 STAT1: '*' IDENTIFIER . '=' EXPR ';'
   58 VAL: IDENTIFIER .
   59    | IDENTIFIER . '(' ARGS ')'
   62    | IDENTIFIER . '[' EXPR2 ']'

    '('  shift, and go to state 55
    '='  shift, and go to state 108
    '['  shift, and go to state 95

    $default  reduce using rule 58 (VAL)


state 63

   53 VAL: VAL . INC
   54    | VAL . DEC
   61    | '*' VAL .

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    INC       [reduce using rule 61 (VAL)]
    DEC       [reduce using rule 61 (VAL)]
    $default  reduce using rule 61 (VAL)


state 64

   51 VAL: '-' VAL .
   53    | VAL . INC
   54    | VAL . DEC

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    INC       [reduce using rule 51 (VAL)]
    DEC       [reduce using rule 51 (VAL)]
    $default  reduce using rule 51 (VAL)


state 65

   52 VAL: '!' VAL .
   53    | VAL . INC
   54    | VAL . DEC

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    INC       [reduce using rule 52 (VAL)]
    DEC       [reduce using rule 52 (VAL)]
    $default  reduce using rule 52 (VAL)


state 66

   53 VAL: VAL . INC
   54    | VAL . DEC
   60    | '&' VAL .

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    INC       [reduce using rule 60 (VAL)]
    DEC       [reduce using rule 60 (VAL)]
    $default  reduce using rule 60 (VAL)


state 67

   15 BLOCK: '{' STATS '}' .

    $default  reduce using rule 15 (BLOCK)


state 68

   18 STATS: STATS STAT .

    $default  reduce using rule 18 (STATS)


state 69

   35 EXPR: EXPR EQ . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 109
    TERM   go to state 41
    VAL    go to state 42


state 70

   36 EXPR: EXPR LE . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 110
    TERM   go to state 41
    VAL    go to state 42


state 71

   37 EXPR: EXPR GE . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 111
    TERM   go to state 41
    VAL    go to state 42


state 72

   38 EXPR: EXPR NE . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 112
    TERM   go to state 41
    VAL    go to state 42


state 73

   41 EXPR: EXPR AND . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 113
    TERM   go to state 41
    VAL    go to state 42


state 74

   42 EXPR: EXPR OR . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 114
    TERM   go to state 41
    VAL    go to state 42


state 75

   33 STAT1: EXPR ';' .

    $default  reduce using rule 33 (STAT1)


state 76

   39 EXPR: EXPR '>' . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 115
    TERM   go to state 41
    VAL    go to state 42


state 77

   40 EXPR: EXPR '<' . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 116
    TERM   go to state 41
    VAL    go to state 42


state 78

   44 EXPR2: EXPR2 '+' . TERM

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    TERM  go to state 117
    VAL   go to state 42


state 79

   45 EXPR2: EXPR2 '-' . TERM

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    TERM  go to state 118
    VAL   go to state 42


state 80

   46 EXPR2: EXPR2 '%' . EXPR2

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 119
    TERM   go to state 41
    VAL    go to state 42


state 81

   48 TERM: TERM '*' . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 120


state 82

   49 TERM: TERM '/' . VAL

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    VAL  go to state 121


state 83

   53 VAL: VAL INC .

    $default  reduce using rule 53 (VAL)


state 84

   54 VAL: VAL DEC .

    $default  reduce using rule 54 (VAL)


state 85

    9 PARAM: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 122


state 86

   10 PARAM: PTR . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


state 87

   11 PARAM: ARR . IDENTIFIER

    IDENTIFIER  shift, and go to state 124


state 88

   13 PARAMS: PARAM .

    $default  reduce using rule 13 (PARAMS)


state 89

    6 FUNC: INT IDENTIFIER '(' PARAMS . ')' BLOCK
   14 PARAMS: PARAMS . ',' PARAM

    ')'  shift, and go to state 125
    ','  shift, and go to state 126


state 90

    7 FUNC: PTR IDENTIFIER '(' PARAMS . ')' BLOCK
   14 PARAMS: PARAMS . ',' PARAM

    ')'  shift, and go to state 127
    ','  shift, and go to state 126


state 91

    8 FUNC: ARR IDENTIFIER '(' PARAMS . ')' BLOCK
   14 PARAMS: PARAMS . ',' PARAM

    ')'  shift, and go to state 128
    ','  shift, and go to state 126


state 92

   20 STAT: IF '(' EXPR . ')' BLOCK ELSE BLOCK
   21     | IF '(' EXPR . ')' BLOCK
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 129
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 93

   22 STAT: WHILE '(' EXPR . ')' BLOCK
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 130
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 94

   23 STAT: FOR '(' STAT1 . EXPR ';' STAT1 ')' BLOCK

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 131
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 95

   62 VAL: IDENTIFIER '[' . EXPR2 ']'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 132
    TERM   go to state 41
    VAL    go to state 42


state 96

   24 STAT: RETURN EXPR ';' .

    $default  reduce using rule 24 (STAT)


state 97

   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2
   66 ARG: EXPR .

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77

    $default  reduce using rule 66 (ARG)


state 98

   59 VAL: IDENTIFIER '(' ARGS . ')'
   65 ARGS: ARGS . ',' ARG

    ')'  shift, and go to state 133
    ','  shift, and go to state 134


state 99

   64 ARGS: ARG .

    $default  reduce using rule 64 (ARGS)


state 100

   30 STAT1: IDENTIFIER '=' EXPR . ';'
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ';'  shift, and go to state 135
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 101

   32 STAT1: IDENTIFIER '[' EXPR2 . ']' '=' EXPR2 ';'
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2
   62 VAL: IDENTIFIER '[' EXPR2 . ']'

    ']'  shift, and go to state 136
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80


state 102

   25 STAT1: INT IDENTIFIER ';' .

    $default  reduce using rule 25 (STAT1)


state 103

   26 STAT1: INT IDENTIFIER '=' . EXPR ';'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 137
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 104

   27 STAT1: PTR IDENTIFIER ';' .

    $default  reduce using rule 27 (STAT1)


state 105

   28 STAT1: PTR IDENTIFIER '=' . EXPR ';'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 138
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 106

   29 STAT1: ARR IDENTIFIER '[' . NUM ']' ';'

    NUM  shift, and go to state 139


state 107

   57 VAL: '(' EXPR ')' .

    $default  reduce using rule 57 (VAL)


state 108

   31 STAT1: '*' IDENTIFIER '=' . EXPR ';'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 140
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 109

   35 EXPR: EXPR EQ EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 35 (EXPR)


state 110

   36 EXPR: EXPR LE EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 36 (EXPR)


state 111

   37 EXPR: EXPR GE EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 37 (EXPR)


state 112

   38 EXPR: EXPR NE EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 38 (EXPR)


state 113

   41 EXPR: EXPR AND EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 41 (EXPR)


state 114

   42 EXPR: EXPR OR EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 42 (EXPR)


state 115

   39 EXPR: EXPR '>' EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 39 (EXPR)


state 116

   40 EXPR: EXPR '<' EXPR2 .
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    $default  reduce using rule 40 (EXPR)


state 117

   44 EXPR2: EXPR2 '+' TERM .
   48 TERM: TERM . '*' VAL
   49     | TERM . '/' VAL

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82

    $default  reduce using rule 44 (EXPR2)


state 118

   45 EXPR2: EXPR2 '-' TERM .
   48 TERM: TERM . '*' VAL
   49     | TERM . '/' VAL

    '*'  shift, and go to state 81
    '/'  shift, and go to state 82

    $default  reduce using rule 45 (EXPR2)


state 119

   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2
   46      | EXPR2 '%' EXPR2 .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80

    '+'       [reduce using rule 46 (EXPR2)]
    '-'       [reduce using rule 46 (EXPR2)]
    '%'       [reduce using rule 46 (EXPR2)]
    $default  reduce using rule 46 (EXPR2)


state 120

   48 TERM: TERM '*' VAL .
   53 VAL: VAL . INC
   54    | VAL . DEC

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    $default  reduce using rule 48 (TERM)


state 121

   49 TERM: TERM '/' VAL .
   53 VAL: VAL . INC
   54    | VAL . DEC

    INC  shift, and go to state 83
    DEC  shift, and go to state 84

    $default  reduce using rule 49 (TERM)


state 122

    9 PARAM: INT IDENTIFIER .

    $default  reduce using rule 9 (PARAM)


state 123

   10 PARAM: PTR IDENTIFIER .

    $default  reduce using rule 10 (PARAM)


state 124

   11 PARAM: ARR IDENTIFIER .

    $default  reduce using rule 11 (PARAM)


state 125

    6 FUNC: INT IDENTIFIER '(' PARAMS ')' . BLOCK

    '{'  shift, and go to state 11

    BLOCK  go to state 141


state 126

   14 PARAMS: PARAMS ',' . PARAM

    INT  shift, and go to state 85
    PTR  shift, and go to state 86
    ARR  shift, and go to state 87

    PARAM  go to state 142


state 127

    7 FUNC: PTR IDENTIFIER '(' PARAMS ')' . BLOCK

    '{'  shift, and go to state 11

    BLOCK  go to state 143


state 128

    8 FUNC: ARR IDENTIFIER '(' PARAMS ')' . BLOCK

    '{'  shift, and go to state 11

    BLOCK  go to state 144


state 129

   20 STAT: IF '(' EXPR ')' . BLOCK ELSE BLOCK
   21     | IF '(' EXPR ')' . BLOCK

    '{'  shift, and go to state 11

    BLOCK  go to state 145


state 130

   22 STAT: WHILE '(' EXPR ')' . BLOCK

    '{'  shift, and go to state 11

    BLOCK  go to state 146


state 131

   23 STAT: FOR '(' STAT1 EXPR . ';' STAT1 ')' BLOCK
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ';'  shift, and go to state 147
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 132

   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2
   62 VAL: IDENTIFIER '[' EXPR2 . ']'

    ']'  shift, and go to state 148
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80


state 133

   59 VAL: IDENTIFIER '(' ARGS ')' .

    $default  reduce using rule 59 (VAL)


state 134

   65 ARGS: ARGS ',' . ARG

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR   go to state 97
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42
    ARG    go to state 149


state 135

   30 STAT1: IDENTIFIER '=' EXPR ';' .

    $default  reduce using rule 30 (STAT1)


state 136

   32 STAT1: IDENTIFIER '[' EXPR2 ']' . '=' EXPR2 ';'
   62 VAL: IDENTIFIER '[' EXPR2 ']' .

    '='  shift, and go to state 150

    $default  reduce using rule 62 (VAL)


state 137

   26 STAT1: INT IDENTIFIER '=' EXPR . ';'
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ';'  shift, and go to state 151
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 138

   28 STAT1: PTR IDENTIFIER '=' EXPR . ';'
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ';'  shift, and go to state 152
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 139

   29 STAT1: ARR IDENTIFIER '[' NUM . ']' ';'

    ']'  shift, and go to state 153


state 140

   31 STAT1: '*' IDENTIFIER '=' EXPR . ';'
   35 EXPR: EXPR . EQ EXPR2
   36     | EXPR . LE EXPR2
   37     | EXPR . GE EXPR2
   38     | EXPR . NE EXPR2
   39     | EXPR . '>' EXPR2
   40     | EXPR . '<' EXPR2
   41     | EXPR . AND EXPR2
   42     | EXPR . OR EXPR2

    EQ   shift, and go to state 69
    LE   shift, and go to state 70
    GE   shift, and go to state 71
    NE   shift, and go to state 72
    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ';'  shift, and go to state 154
    '>'  shift, and go to state 76
    '<'  shift, and go to state 77


state 141

    6 FUNC: INT IDENTIFIER '(' PARAMS ')' BLOCK .

    $default  reduce using rule 6 (FUNC)


state 142

   14 PARAMS: PARAMS ',' PARAM .

    $default  reduce using rule 14 (PARAMS)


state 143

    7 FUNC: PTR IDENTIFIER '(' PARAMS ')' BLOCK .

    $default  reduce using rule 7 (FUNC)


state 144

    8 FUNC: ARR IDENTIFIER '(' PARAMS ')' BLOCK .

    $default  reduce using rule 8 (FUNC)


state 145

   20 STAT: IF '(' EXPR ')' BLOCK . ELSE BLOCK
   21     | IF '(' EXPR ')' BLOCK .

    ELSE  shift, and go to state 155

    $default  reduce using rule 21 (STAT)


state 146

   22 STAT: WHILE '(' EXPR ')' BLOCK .

    $default  reduce using rule 22 (STAT)


state 147

   23 STAT: FOR '(' STAT1 EXPR ';' . STAT1 ')' BLOCK

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 26
    INT         shift, and go to state 27
    PTR         shift, and go to state 28
    ARR         shift, and go to state 29
    '('         shift, and go to state 30
    '*'         shift, and go to state 32
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    STAT1  go to state 156
    EXPR   go to state 39
    EXPR2  go to state 40
    TERM   go to state 41
    VAL    go to state 42


state 148

   62 VAL: IDENTIFIER '[' EXPR2 ']' .

    $default  reduce using rule 62 (VAL)


state 149

   65 ARGS: ARGS ',' ARG .

    $default  reduce using rule 65 (ARGS)


state 150

   32 STAT1: IDENTIFIER '[' EXPR2 ']' '=' . EXPR2 ';'

    INC         shift, and go to state 23
    DEC         shift, and go to state 24
    NUM         shift, and go to state 25
    IDENTIFIER  shift, and go to state 50
    '('         shift, and go to state 30
    '*'         shift, and go to state 51
    '-'         shift, and go to state 33
    '!'         shift, and go to state 34
    '&'         shift, and go to state 35

    EXPR2  go to state 157
    TERM   go to state 41
    VAL    go to state 42


state 151

   26 STAT1: INT IDENTIFIER '=' EXPR ';' .

    $default  reduce using rule 26 (STAT1)


state 152

   28 STAT1: PTR IDENTIFIER '=' EXPR ';' .

    $default  reduce using rule 28 (STAT1)


state 153

   29 STAT1: ARR IDENTIFIER '[' NUM ']' . ';'

    ';'  shift, and go to state 158


state 154

   31 STAT1: '*' IDENTIFIER '=' EXPR ';' .

    $default  reduce using rule 31 (STAT1)


state 155

   20 STAT: IF '(' EXPR ')' BLOCK ELSE . BLOCK

    '{'  shift, and go to state 11

    BLOCK  go to state 159


state 156

   23 STAT: FOR '(' STAT1 EXPR ';' STAT1 . ')' BLOCK

    ')'  shift, and go to state 160


state 157

   32 STAT1: IDENTIFIER '[' EXPR2 ']' '=' EXPR2 . ';'
   44 EXPR2: EXPR2 . '+' TERM
   45      | EXPR2 . '-' TERM
   46      | EXPR2 . '%' EXPR2

    ';'  shift, and go to state 161
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '%'  shift, and go to state 80


state 158

   29 STAT1: ARR IDENTIFIER '[' NUM ']' ';' .

    $default  reduce using rule 29 (STAT1)


state 159

   20 STAT: IF '(' EXPR ')' BLOCK ELSE BLOCK .

    $default  reduce using rule 20 (STAT)


state 160

   23 STAT: FOR '(' STAT1 EXPR ';' STAT1 ')' . BLOCK

    '{'  shift, and go to state 11

    BLOCK  go to state 162


state 161

   32 STAT1: IDENTIFIER '[' EXPR2 ']' '=' EXPR2 ';' .

    $default  reduce using rule 32 (STAT1)


state 162

   23 STAT: FOR '(' STAT1 EXPR ';' STAT1 ')' BLOCK .

    $default  reduce using rule 23 (STAT)
